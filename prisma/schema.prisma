// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// prisma/schema.prisma
// WARNING: This schema is the single source of truth for the entire server

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

// ---------------------------------------------------------------------------
// iron-wing-dispatching.com
// ---------------------------------------------------------------------------
model SignUpForm {
  id          Int      @id @default(autoincrement())
  firstName   String   @map("first_name")
  lastName    String   @map("last_name")
  email       String   @unique
  phone       String
  fleetSize   String   @map("fleet_size")
  trailerType String   @map("trailer_type")
  plan        String
  submitDate  DateTime @default(now()) @map("submit_date")

  @@map("sign_up_forms")
}

model ContactSubmission {
  id         Int      @id @default(autoincrement())
  email      String
  phone      String?
  message    String
  submitDate DateTime @default(now()) @map("submit_date")

  @@map("contact_submissions")
}


// ---------------------------------------------------------------------------
// Companies
// ---------------------------------------------------------------------------
model companies {
  id       Int      @id @default(autoincrement())
  name     String   @unique
  phone    String?
  email    String?
  website  String?

  mcNumber  String? @map("mc_number")
  dotNumber String? @map("dot_number")
  einNumber String? @map("ein_number")

  // Numeric fields for how many trucks/trailers a company has
  trucksNumber    Int? @default(0)
  trailersNumber  Int? @default(0)

  // Relations
  drivers  drivers[]
  trucks   trucks[]
  trailers trailers[]

  @@map("companies")
}


// ---------------------------------------------------------------------------
// Drivers
// ---------------------------------------------------------------------------
model drivers {
  id       Int    @id @default(autoincrement())
  fullName String
  phone    String? @unique
  email    String? @unique

  // Link driver to a company
  companyId Int?
  company   companies? @relation(fields: [companyId], references: [id])

  // Link driver to a single truck (optional)
  truckId Int?
  truck   trucks? @relation(fields: [truckId], references: [id])

  // Link driver to a single trailer (optional)
  trailerId Int?
  trailer   trailers? @relation(fields: [trailerId], references: [id])

  // Twilio-related relations
  call_logs  call_logs[]
  messages   messages[]

  @@map("drivers")
}


// ---------------------------------------------------------------------------
// Trucks
// ---------------------------------------------------------------------------
model trucks {
  id          Int    @id @default(autoincrement())
  model       String
  make        String
  trailerType String
  plateNumber String

  // Link truck to a company
  companyId Int?
  company   companies? @relation(fields: [companyId], references: [id])

  // If multiple drivers can share a single truck
  drivers drivers[]

  @@map("trucks")
}


// ---------------------------------------------------------------------------
// Trailers
// ---------------------------------------------------------------------------
model trailers {
  id          Int    @id @default(autoincrement())
  type        String
  model       String
  make        String
  trailerType String
  plateNumber String

  // Link trailer to a company
  companyId Int?
  company   companies? @relation(fields: [companyId], references: [id])

  // If multiple drivers can share a single trailer
  drivers drivers[]

  @@map("trailers")
}


// ---------------------------------------------------------------------------
// Twilio-voip
// ---------------------------------------------------------------------------
model call_logs {
  id          Int      @id @default(autoincrement())
  call_sid    String   @unique
  timestamp   DateTime @default(now())
  from_number String
  to_number   String
  status      String?
  duration    Int?     @default(0)
  direction   String?  @default("unknown")

  // Relation to drivers (optional)
  driver_id   Int?
  driver      drivers? @relation(fields: [driver_id], references: [id])

  // Relation to companies through drivers
  companyId   Int?
  company     companies? @relation("CompanyCallLogs", fields: [companyId], references: [id])

  @@map("call_logs")
}

model messages {
  id          Int       @id @default(autoincrement())
  from_number String    @map("from")
  to_number   String
  body        String
  timestamp   DateTime @default(now())

  // Relation to drivers (optional)
  driver_id   Int?
  driver      drivers? @relation(fields: [driver_id], references: [id])

  // Relation to companies through drivers
  companyId   Int?
  company     companies? @relation("CompanyMessages", fields: [companyId], references: [id])

  @@map("messages")
}
